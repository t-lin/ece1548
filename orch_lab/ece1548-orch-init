#!/bin/bash -f
# Create a ssh key if there is no key in the .ssh directory
# Set an option in a local file
# Get an option from an INI file
# iniget config-file section option
source /home/savitb/bin/functions
USER="$(whoami)"
KEY_NAME="$USER"key
KEY_NAME=`echo $KEY_NAME | sed 's/\.//g'`
SECGROUP_NAME=$USER

blue_desc_title "  Initializing all settings for ($USER)"

green_desc_title "1. Creating a keypair ($KEY_NAME) ..."
if [[ ! -f $HOME/.ssh/id_rsa.pub ]]; then
    command_desc "ssh-keygen -t rsa"
    echo -e "\n" | ssh-keygen -t rsa -N ""
else
    green_desc "An existing keypair was found, skipping create"
fi
AUTH_KEY=$(cat ~/.ssh/id_rsa.pub)

green_desc_title "2. Importing the key-pair ($KEY_NAME) to SAVI Testbed ..."
command_desc "nova keypair-add --pub_key $HOME/.ssh/id_rsa.pub $KEY_NAME"
UPLOADED_KEY=`nova keypair-list | grep $KEY_NAME`
if [[ ! -z "$UPLOADED_KEY" ]]; then
    # Key-pair was same name was found
    # Assume the key doesn't match: delete and re-upload
    nova keypair-delete $KEY_NAME
    sleep 1
fi
nova keypair-add --pub_key $HOME/.ssh/id_rsa.pub $KEY_NAME

green_desc_title "3. Creating a security group ($SECGROUP_NAME) ..."
SECGROUP=`nova secgroup-list | grep $SECGROUP_NAME`
if [[ ! -z "$SECGROUP" ]]; then
    green_desc "Security Group $SECGROUP_NAME already exists, skipping create"
else
    command_desc "nova secgroup-create $SECGROUP_NAME \"$SECGROUP_NAME secgroup\""
    nova secgroup-create $SECGROUP_NAME "$SECGROUP_NAME secgroup"
fi

#green_desc_title "3. Creating a security group ($SECGROUP_NAME) ..."
#command_desc "nova secgroup-create $SECGROUP_NAME \"$SECGROUP_NAME secgroup\""
#nova secgroup-create $SECGROUP_NAME "$SECGROUP_NAME secgroup"

green_desc_title "4. Adding rules to enable SSH, ICMP, and HTTP to ($SECGROUP_NAME) ..."
SSH_RULE=`nova secgroup-list-rules $SECGROUP_NAME | grep -i tcp | grep 22`
ICMP_RULE=`nova secgroup-list-rules $SECGROUP_NAME | grep -i icmp | grep 255`
HTTP_RULE=`nova secgroup-list-rules $SECGROUP_NAME | grep -i tcp | grep 80`
command_desc "nova secgroup-add-rule $SECGROUP_NAME TCP 22 22 0.0.0.0/0"
if [[ -z "$SSH_RULE" ]]; then
    nova secgroup-add-rule $SECGROUP_NAME TCP 22 22 0.0.0.0/0
fi
command_desc "nova secgroup-add-rule $SECGROUP_NAME ICMP -1 255 0.0.0.0/0"
if [[ -z "$ICMP_RULE" ]]; then
    nova secgroup-add-rule $SECGROUP_NAME ICMP -1 255 0.0.0.0/0
fi
command_desc "nova secgroup-add-rule $SECGROUP_NAME TCP 80 80 0.0.0.0/0"
if [[ -z "$HTTP_RULE" ]]; then
    nova secgroup-add-rule $SECGROUP_NAME TCP 80 80 0.0.0.0/0
fi

green_desc_title "5. Creating Heat template files related to this lab ..."
cp -f /home/savitb/thomas/ece1548/orch_lab/wordpress.yaml ~
green_desc "Created file 'wordpress.yaml' in the home directory ($HOME/wordpress.yaml)"
cp -f /home/savitb/thomas/ece1548/orch_lab/private_net_nat.yaml ~
chmod o-r ~/private_net_nat.yaml
chmod g-r ~/private_net_nat.yaml
green_desc "Created file 'private_net_nat.yaml' in the home directory ($HOME/private_net_nat.yaml)"

echo ""
blue_desc "Initialization completed."
